git: https://github.com/OttoDotto/Robot-de-Competencia

OBJETIVO PRINCIPAL:	Armar el circuito de control del robot de competencia - Seguidor de linea, Futbolero &/o Sumo
* Separar la lectura en otra PCB
* Separar el diseño 3D aparte de las pcbs 			No hacer un T que sea una placa de cobre entera
* Simplificar el trabajo para el equipo de futbol &/o Sumo


REQUIRIMIENTOS:
* Debe tener espacio para sostener los motores o agarrarlos desde el pcb. (optimizar lugar - como en el caso de los competidores)
* Debe tener entradas para la placa de sensores. Conector plano o molex, recibe la lecturas Analógicas y los alimenta vcc&gnd
* Debe tener tira de pines para quitar o cambiar los puentesH o el uc
* Debe tener cables con un conector para alimentar la pcb
* Debe tener un regulador de tensión para alimentar desde una pila externa mediante un conector (con. cable-cable)
* Si es necesario usaremos componentes SMD
* En el caso del seguidor, vamos a usar:
	* microC	- ESP WROOM-32 DEVKIT V1
	* PUENTE H	- DRV8833			MODO PARALELO			
	* MOTORES	- MICRO POLOLU 6V 500 RPM
* Debe tener pulsadores o botones integrados en el pcb
	- Encendido del robot
	- Calibración de sensores	(leer que valores son blancos y cuales son negros - cambia con la pista)


TO-DO:
* Charlar sobre el presupuesto y tiempo a dedicar + que buscamos conseguir con la competencia	(Aprobar TD2)
* Leer los reglamentos en caso de excepciones con los componentes que usemos
* Buscar y definir que baterias vamos a utilizar
* Definir el tamaño del pcb y chasis (Trapecio)
* Buscar el modelo 3D aprox de los motores
* Buscar y definir que conectores vamos a usar
* Verificar el micro-controlador que estamos usando


DONE:
* Sensores a usar QTR-8A. Pueden trabajar con 3.3V  (Modulo de 8 sensores con 11 pines, vcc y gnd + 8 salidas Analogs + pin apagarleds)


APUNTES:
* Los sensores deben ir conectados a los ADC del ESP32
* Los puentesH deben ir conectados a tres pines, dos de control y uno de pwm
* Vin del esp32 es entre 4 y 12 V

* PINES ESP32 ELEJIDOS:	(D = GPIO !!!!)
Sensores (fila bajo el USB, contiguos para pistas rectas)
S1 → GPIO36 (VP)
S2 → GPIO39 (VN)
S3 → GPIO34
S4 → GPIO35
S5 → GPIO32
S6 → GPIO33
S7 → GPIO27
S8 → GPIO14

Puente H izquierdo (M1) – lado izquierdo del ESP32
IN1_M1 → GPIO26 (PWM)
IN2_M1 → GPIO25 (PWM)
SLEEP_M1 → GPIO16		(PROBLEMA, ESTA DEL OTRO LADO)

Puente H derecho (M2) – lado derecho del ESP32
IN1_M2 → GPIO21 (PWM)
IN2_M2 → GPIO18 (PWM)
SLEEP_M2 → GPIO23

Botones, buzzer, LED (abajo/derecha)
SW1 → GPIO22 (entrada con pull-up interno)
SW2 → GPIO19 (entrada con pull-up interno)
BUZZER → GPIO17 (PWM con LEDC)			(PROBLEMA, queda atrapado)
LED → GPIO13 (salida)

	

